{"version":3,"sources":["app.js","main.js","calendar-date/CalendarDate.service.js","date/date.controller.js","months-service/months.service.js","month/month.directive.js","root/root.controller.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","CalendarDate","from","month","date","dateObject","Date","getFullYear","getMonth","calendarDate","_dateObject","weekday","DAYS","getDay","monthName","MONTHS","year","isInPast","key","appointmentKeyFor","appointment","localStorage","getItem","save","setItem","removeItem","this","today","setHours","service","DateController","$scope","$state","$stateParams","fetchDay","edit","newAppointment","text","copy","day","deleteAppointment","stopEditing","saveAppointment","close","go","delete","cancelEdit","monthsService","infoAbout","days","daysIn","name","nameOf","startDay","startDayOf","lastDay","i","getDate","push","firstDay","factory","Month","MonthController","months","currentMonthInfo","now","showDay","directive","RootController"],"mappings":"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","file":"../app/calendar.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('calendar.templates', []);\n  angular.module('calendar.services', []);\n  angular.module('calendar.directives', [\n    'calendar.services',\n    'calendar.templates'\n  ]);\n  angular.module('calendar.controllers', [\n    'calendar.services',\n    'calendar.directives',\n    'calendar.templates'\n  ]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('calendar', [\n      'ui.router',\n      'calendar.templates',\n      'calendar.controllers',\n      'calendar.services',\n      'calendar.directives'\n    ])\n\n    /* @ngInject */\n    .config(function($stateProvider, $urlRouterProvider) {\n      $stateProvider\n        .state('month', {\n          url: '/',\n          templateUrl: 'app/root/root.controller.html',\n          controller: 'RootController'\n        })\n        .state('date', {\n          url: '/date/:year/:month/:date',\n          templateUrl: 'app/date/date.controller.html',\n          controller: 'DateController'\n        });\n\n      $urlRouterProvider.otherwise('/');\n    });\n})();\n","(function() {\n  'use strict';\n\n  angular.module('calendar.services')\n    .service('CalendarDate', CalendarDate);\n\n  /* @ngInject */\n  function CalendarDate() {\n    var MONTHS = ['January', 'Febuary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    var DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    \n    this.from = from;\n    this.save = save;\n\n    ////////////////\n\n    function from(month, date) {\n      var dateObject = new Date(month.getFullYear(), month.getMonth(), date);\n      var calendarDate = {\n        _dateObject: dateObject,\n        date: date,\n        weekday: DAYS[dateObject.getDay()],\n        month: month.getMonth(),\n        monthName: MONTHS[month.getMonth()],\n        year: month.getFullYear(),\n        isInPast: isInPast(dateObject)\n      };\n      var key = appointmentKeyFor(calendarDate);\n      calendarDate.appointment = localStorage.getItem(key) || null;\n\n      return calendarDate;\n    }\n\n    function save(date) {\n      var key = appointmentKeyFor(date);\n      if (!!date.appointment) {\n        localStorage.setItem(key, date.appointment);\n      } else {\n        localStorage.removeItem(key);\n      }\n    }\n  }\n\n  function appointmentKeyFor(date) {\n    return '' + date.year + '/' + date.month + '/' + date.date;\n  }\n\n  function isInPast(date) {\n    var today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return date < today;\n  }\n})();\n","(function() {\n  'use strict';\n  \n  angular.module('calendar.controllers')\n    .controller('DateController', DateController);\n  \n  /* @ngInject */\n  function DateController($scope, $state, $stateParams, CalendarDate) {\n    $scope.day = fetchDay();\n    $scope.newAppointment = null;\n\n    $scope.edit            = edit;\n    $scope.delete          = deleteAppointment;\n    $scope.cancelEdit      = stopEditing;\n    $scope.saveAppointment = saveAppointment;\n    $scope.close           = close;\n\n    //////////////\n\n    function fetchDay() {\n      var year = $stateParams.year,\n          month = $stateParams.month,\n          date = $stateParams.date;\n      return CalendarDate.from(new Date(year, month, date), date);\n    }\n\n    function edit() {\n      $scope.newAppointment = {text: angular.copy($scope.day.appointment)};\n    }\n\n    function deleteAppointment() {\n      $scope.day.appointment = null;\n      CalendarDate.save($scope.day);\n    }\n\n    function stopEditing() {\n      $scope.newAppointment = null; \n    }\n\n    function saveAppointment(text) {\n      $scope.day.appointment = text;\n      CalendarDate.save($scope.day);\n      stopEditing();\n    }\n\n    function close() {\n      $state.go('month');\n    }\n  }\n})();\n","(function() {\n  'use strict';\n  \n  angular.module('calendar.services')\n    .factory('months', monthsService);\n  \n  /* @ngInject */\n  function monthsService(CalendarDate) {\n    var MONTHS = ['January', 'Febuary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    var service = {\n      infoAbout: infoAbout\n    };\n    \n    return service;\n    ///////////////\n\n    function infoAbout(month) {\n      return {\n        days:     daysIn(month),\n        name:     nameOf(month),\n        startDay: startDayOf(month)\n      };\n    }\n\n    function daysIn(month) {\n      var lastDay = new Date(month.getFullYear(), month.getMonth() + 1, 0);\n      var days = [];\n      for (var i = 1; i <= lastDay.getDate(); i += 1) {\n        days.push(CalendarDate.from(month, i))\n      }\n      return days;\n    }\n\n    function nameOf(month) {\n      return MONTHS[month.getMonth()];\n    }\n\n    function startDayOf(month) {\n      var firstDay = new Date(month.getFullYear(), month.getMonth(), 1);\n      return firstDay.getDay();\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('calendar.directives')\n    .directive('month', Month);\n\n  function Month() {\n    return {\n      templateUrl: 'static/app/month/month.directive.html',\n      controller: MonthController\n    };\n  }\n\n  /* @ngInject */\n  function MonthController($scope, $state, months) {\n    $scope.month = currentMonthInfo();\n\n    $scope.showDay = showDay;\n\n    /////////////////////\n\n    function currentMonthInfo() {\n      var now = new Date();\n      return months.infoAbout(now);\n    }\n\n    function showDay(day) {\n      if (day.isInPast) return;\n      $state.go('date', {year: day.year, month: day.month, date: day.date});\n    }\n  }\n})();\n","(function() {\n  'use strict';\n  \n  angular.module('calendar.controllers')\n  .controller('RootController', RootController);\n  \n  /* @ngInject */\n  function RootController($scope, $state) {\n    \n  }\n})();\n"]}